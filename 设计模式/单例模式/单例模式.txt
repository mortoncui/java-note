publlic class Singleton {
    private Singleton() {...}
    private static class SingletonLoader {
        private static final Singleton INSTANCE = new Singleton();
    }
 
    public static Singleton getInstance() {
        return SingletonLoader.INSTANCE;
    }
}
优点：
懒汉式
不用考虑同步

public class Singleton {
    private volatile static Singleton singleton;
    private Singleton (){...}
    public static Singleton getSingleton() {
        if (singleton == null) {
            synchronized (Singleton.class) {
                if (singleton == null) {
                    singleton = new Singleton();
                }
            }
        }
        return singleton;
    }
}
